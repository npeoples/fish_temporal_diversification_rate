#######################
# Reading in the Data #
#######################

T <- readTrees("trees/marine_reef_tree.nexus")[1]
taxa <- T.taxa()

moves    = VectorMoves()
monitors = VectorMonitors()

NUM_INTERVALS = 193
NUM_BREAKS := NUM_INTERVALS - 1

####################
# Create the rates #
####################

speciation_global_scale_hyperprior <- 0.01076349
extinction_global_scale_hyperprior <- 0.01076349

speciation_global_scale ~ dnHalfCauchy(0,1)
extinction_global_scale ~ dnHalfCauchy(0,1)

log_speciation_at_present ~ dnUniform(-10.0,10.0)
log_speciation_at_present.setValue(0.0)
log_extinction_at_present ~ dnUniform(-10.0,10.0)
log_extinction_at_present.setValue(-1.0)

moves.append( mvSlideBactrian(log_speciation_at_present,weight=5))
moves.append( mvSlideBactrian(log_extinction_at_present,weight=5))

for (i in 1:NUM_BREAKS) {
  sigma_speciation[i] ~ dnHalfCauchy(0,1)
  sigma_extinction[i] ~ dnHalfCauchy(0,1)

  sigma_speciation[i].setValue(runif(1,0.005,0.1)[1])
  sigma_extinction[i].setValue(runif(1,0.005,0.1)[1])

  delta_log_speciation[i] ~ dnNormal( mean=0, sd=sigma_speciation[i]*speciation_global_scale*speciation_global_scale_hyperprior )
  delta_log_extinction[i] ~ dnNormal( mean=0, sd=sigma_extinction[i]*extinction_global_scale*extinction_global_scale_hyperprior )
}

speciation := fnassembleContinuousMRF(log_speciation_at_present,delta_log_speciation,initialValueIsLogScale=TRUE,order=1)
extinction := fnassembleContinuousMRF(log_extinction_at_present,delta_log_extinction,initialValueIsLogScale=TRUE,order=1)

moves.append( mvEllipticalSliceSamplingSimple(delta_log_speciation,weight=5,tune=FALSE) )
moves.append( mvEllipticalSliceSamplingSimple(delta_log_extinction,weight=5,tune=FALSE) )

moves.append( mvHSRFHyperpriorsGibbs(speciation_global_scale, sigma_speciation , delta_log_speciation , speciation_global_scale_hyperprior, propGlobalOnly=0.75, weight=10) )
moves.append( mvHSRFHyperpriorsGibbs(extinction_global_scale, sigma_extinction , delta_log_extinction , extinction_global_scale_hyperprior, propGlobalOnly=0.75, weight=10) )

moves.append( mvHSRFIntervalSwap(delta_log_speciation ,sigma_speciation ,weight=5) )
moves.append( mvHSRFIntervalSwap(delta_log_extinction ,sigma_extinction ,weight=5) )
interval_times <- interval_times <- abs(T.rootAge() * seq(1, NUM_BREAKS, 1)/NUM_INTERVALS)

rho <- T.ntips()/4008

timetree ~ dnEpisodicBirthDeath(
rootAge=T.rootAge(), 
lambdaRates=speciation, 
lambdaTimes=interval_times, 
muRates=extinction, 
muTimes=interval_times, 
rho=rho, 
samplingStrategy="uniform", 
condition="survival", 
taxa=taxa)

timetree.clamp(T)

mymodel = model(rho)

monitors.append( mnModel(filename="marine_reef_output/5s.log",printgen=10, separator = TAB) )
monitors.append( mnFile(filename="marine_reef_output/5s_speciation_rates.log",printgen=10, separator = TAB, speciation) )
monitors.append( mnFile(filename="marine_reef_output/5s_speciation_times.log",printgen=10, separator = TAB, interval_times) )
monitors.append( mnFile(filename="marine_reef_output/5s_extinction_rates.log",printgen=10, separator = TAB, extinction) )
monitors.append( mnFile(filename="marine_reef_output/5s_extinction_times.log",printgen=10, separator = TAB, interval_times) )
monitors.append( mnScreen(printgen=100, extinction_global_scale, speciation_global_scale) )

mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

mymcmc.burnin(generations=50000, tuningInterval=200)
mymcmc.run(generations=500000, tuningInterval=200)

q()
